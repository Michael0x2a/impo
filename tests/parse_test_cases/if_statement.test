if true:
    print(a1)
    print(a2)

if 3 + 4 == 7:
    print(b1)
    print(b2)
elif foo() * bar() < baz.qux:
    print(b3)
    print(b4)
elif 3 < a < 10:
    print(b5)
    print(b6)

if c1:
    print(c2)
elif c3:
    print(c4)
else:
    print(c5)

# If statement with comment
if true:
    print(d1)
    # And a nested comment
    print(d2)
else:
    print(d3)

    print(d4)

if x1:
    if y1:
        print(e1)
    elif y2:
        print(e2)
elif x2:
    print(e4)
    if y3:
        print(e5)
    else:
        print(e6)
    print(e7)

if (a + b + c
    + d 
        + e +
            f):
    print(f1)

---

(if
    (if-branch true
        (func print a1)
        (func print a2)
    )
)

(if
    (if-branch (infix (infix 3 + 4) == 7)
        (func print b1)
        (func print b2)
    )
    (elif-branch (infix (infix (func foo) * (func bar)) < (lookup baz qux))
        (func print b3)
        (func print b4)
    )
    (elif-branch (infix 3 < a < 10)
        (func print b5)
        (func print b6)
    )
)

(if
    (if-branch c1
        (func print c2)
    )
    (elif-branch c3
        (func print c4)
    )
    (else-branch
        (func print c5)
    )
)

# If statement with comment
(if
    (if-branch true
        (func print d1)
        # And a nested comment
        (func print d2)
    )
    (else-branch
        (func print d3)

        (func print d4)
    )
)

(if
    (if-branch x1
        (if
            (if-branch y1
                (func print e1)
            )
            (elif-branch y2
                (func print e2)
            )
        )
    )
    (elif-branch x2
        (func print e4)
        (if
            (if-branch y3
                (func print e5)
            )
            (else-branch
                (func print e6)
            )
        )
        (func print e7)
    )
)

(if
    (if-branch (paren (infix a + b + c + d + e + f))
        (func print f1)
    )
)
